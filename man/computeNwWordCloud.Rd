% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeNwWordCloud.R
\name{computeNwWordCloud}
\alias{computeNwWordCloud}
\title{Compute wordCloud of the input network}
\usage{
computeNwWordCloud(edgelist, nodelist, annotation, internalid, returnas)
}
\arguments{
\item{edgelist}{a data frame of edges contains at least a source column (1st column) and a target column (2nd column).}

\item{nodelist}{a data frame of nodes contains at least two columns of node attributes.
1st column is id or neo4j id, 2nd column is id or grinn id. The 2nd column is used for Mesh annotation.}

\item{annotation}{a string specifying the annotation type e.g. pathway (default) and mesh. Pathway annotation requires the database.
Mesh annotation doesn't require the database but it is available for PubChem compounds only.}

\item{internalid}{a logical value indicating whether the network nodes are neo4j ids, if TRUE (default). If not, the network nodes are expected to be any ids.
See details and see \code{\link{convertId}} for how to convert ids. It has no effect on Mesh annotation.}

\item{returnas}{a string specifying output type. It can be one of dataframe, list, json. Default is dataframe.}
}
\value{
list of data frame of nodes, edges, wordcloud and pairs. The pairs data frame contains annotation pairs. The data frame of wordcloud contains the following components:

\code{rank} = rank sort by freq

\code{id} = annotation id or annotation neo4j id

\code{gid} = annotation id or annotation grinn id

\code{nodename} = annotation name

\code{nodelabel} = annotation type

\code{nodexref} = cross references

\code{freq} = frequency of the annotation term

\code{member} = list of members of the annotation term

Return list of empty data frame if error or found nothing.
}
\details{
The database uses two id systems. The neo4j id is a numeric, internal id automatically generated by the database system.
The grinn id (gid) is an id system of Grinn database that uses main ids of standard resources
i.e. ENSEMBL for genes (e.g.ENSG00000139618), UniProt for proteins (e.g.P0C9J6), PubChem CID for compounds (e.g.5793), KEGG for pathways (e.g.hsa00010).
}
\examples{
#simnw <- computeSimilarity(c(1110,10413,196,51,311,43,764,790)) #compute similarity network for given pubchem compounds
#result <- computeNwWordCloud(simnw$edges, simnw$nodes, annotation="mesh", internalid=FALSE)
#wordcloud::wordcloud(words = result$wordcloud$nodename, freq = result$wordcloud$freq, scale=c(2,.1),min.freq = 1,max.words=50, random.order=FALSE, rot.per=0.5, colors=RColorBrewer::brewer.pal(8, "Dark2"))
#barplot(result$wordcloud$freq[1:10], las = 2, names.arg = result$wordcloud$nodename[1:10], col ="lightblue", main ="Most frequent words", ylab = "Word frequencies")
}
\author{
Kwanjeera W \email{kwanich@ucdavis.edu}
}
\references{
http://www.sthda.com/english/wiki/text-mining-and-word-cloud-fundamentals-in-r-5-simple-steps-you-should-know
}
\seealso{
\pkg{\link{tm}}, \pkg{\link{wordcloud}}
}

