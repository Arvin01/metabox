% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeNwWordCloud.R
\name{computeNwWordCloud}
\alias{computeNwWordCloud}
\title{Compute word cloud on the input network}
\usage{
computeNwWordCloud(edgelist, nodelist, annotation, internalid, returnas)
}
\arguments{
\item{edgelist}{a data frame of edges contains at least source and target pairs}

\item{nodelist}{a data frame of nodes contains node information e.g. node name, node xref.
The first column is id. See \code{\link{fetchNetwork}} for the data frame structure.}

\item{annotation}{a string specifying the type of annotations e.g. pathway and mesh. Mesh annotation is available for PubChem compounds only.}

\item{internalid}{boolean value, whether name attributes of pval are neo4j ids, see \code{\link{convertId}} for how to convert to neo4j ids.
\code{internalid} has no effect on Mesh enrichment.}

\item{returnas}{a string specifying output type. It can be one of dataframe, list, json. Default is dataframe.}
}
\value{
list of nodes, edges, WordCloud result and annotation pairs. The list contains the data frame of nodes, the data frame of edges and
the data frame of wordCloud result with the following components:

\code{rank} = rank sort by freq

\code{id} = internal neo4j id

\code{gid} = grinn id

\code{nodename} = name of entity set

\code{nodelabel} = annotation type

\code{nodexref} = cross references

\code{freq} = frequency of words

\code{member} = list of members of the entity set
}
\description{
compute word cloud on the input network.
The input network is generated from any function such as \code{\link{computeSimilarity}}, \code{\link{computeCorrelation}}, \code{\link{computeParCorrelation}}, \code{\link{computeSubnetwork}},
\code{\link{fetchHetNetwork}} and \code{\link{fetchNetwork}}. The function calls \code{\link{callWordCloud}}.
}
\examples{
# pc = read.csv("~/Desktop/testGrinn/pubchemls.txt")
# nw = computeSimilarity(pc$GrinnID)
# wd = computeNwWordCloud(nw$edges,nw$nodes)
# wordcloud::wordcloud(words = gsub(" - Mus musculus \\\\(mouse\\\\)","",wd$wordcloud$nodename), freq = wd$wordcloud$freq, scale=c(2,.1),min.freq = 1,max.words=50, random.order=FALSE, rot.per=0.5, colors=brewer.pal(8, "Dark2"))
# barplot(wd$wordcloud$freq[1:10], las = 2, names.arg = gsub(" - Mus musculus \\\\(mouse\\\\)","",wd$wordcloud$nodename[1:10]), col ="lightblue", main ="Most frequent words", ylab = "Word frequencies")
}
\author{
Kwanjeera W \email{kwanich@ucdavis.edu}
}
\references{
http://www.sthda.com/english/wiki/text-mining-and-word-cloud-fundamentals-in-r-5-simple-steps-you-should-know
}
\seealso{
\code{\link{fetchNetwork}}, \code{\link{fetchHetNetwork}}, \pkg{\link{tm}}, \pkg{\link{wordcloud}}
}

