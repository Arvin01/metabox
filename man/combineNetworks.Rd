% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combineNetworks.R
\name{combineNetworks}
\alias{combineNetworks}
\title{Combine networks}
\usage{
combineNetworks(networks, returnas)
}
\arguments{
\item{networks}{list of networks.}

\item{returnas}{a string specifying output type. It can be one of dataframe, list, json. Default is dataframe.}
}
\value{
list of nodes and 
list of edges with the following components:

\code{source, target} = node internal neo4j id

\code{type} = relationship type

\code{datasource} = relationship resource

\code{properties} = relationship properties

and other information such as correlation coefficient, pvalue, etc.
Return empty list or data frame if error or found nothing.
}
\description{
The function can combine networks computed from \code{\link{fetchNetwork}}, \code{\link{fetchHetNetwork}}, \code{\link{computeCorrelation}}, 
\code{\link{computeParCorrelation}}, and \code{\link{computeSimilarity}}.
}
\examples{
# Create metabolite-protein network from the list of metabolites using grinn ids and combine the grinn network to a correlation network
#kw <- c('G160','G300','G371')
#grinnnw <- fetchGrinnNetwork(txtInput=kw, from="metabolite", to="protein")
#dummy <- rbind(nodetype=rep("metabolite"),t(mtcars))
#colnames(dummy) <- c('G160','G300','G371','G367',paste0('G',sample(400:22000, 28)))
#corrnw <- fetchCorrNetwork(datNormX=dummy, datNormY=NULL, corrCoef=0.5, pval= 1e-12, method="pearson", returnAs="tab")
#result <- combineNetwork(grinnnw,corrnw)
#library(igraph)
#plot(graph.data.frame(result$edges[,1:2], directed=FALSE))
# Create metabolite-protein network from the list of metabolites using grinn ids and combine the grinn network to a provided network
#txtInput <- list('G371','G783','G1.1')
#grinnnw <- fetchGrinnNetwork(txtInput, from="metabolite", to="protein")
#othernw = list()
#othernw$nodes = data.frame(id=c("G371","G783","XXX","YYY"),nodename=c("G371","G783","XXX","YYY"),nodetype=c("metabolite","metabolite","protein","protein"),stringsAsFactors = FALSE)
#othernw$edges = data.frame(source=c("G371","G783"),target=c("XXX","YYY"),corr_coef=c(-0.368,0.385),pval=c(0.000927,0.000497),reltype=c("Metabolite_Protein","Metabolite_Protein"),relname=c("CORRELATION","CORRELATION"),stringsAsFactors = FALSE)
#result <- combineNetwork(grinnnw,othernw)
}
\author{
Kwanjeera W \email{kwanich@ucdavis.edu}
}
\seealso{
\code{\link{fetchNetwork}}, \code{\link{fetchHetNetwork}}, \code{\link{computeCorrelation}}, \code{\link{computeParCorrelation}}, \code{\link{computeSimilarity}}
}

