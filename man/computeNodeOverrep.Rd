% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeNodeOverrep.R
\name{computeNodeOverrep}
\alias{computeNodeOverrep}
\title{Perform overrepresentation analysis on the input entities}
\usage{
computeNodeOverrep(txtinput, nodetype, annotation, internalid, size)
}
\arguments{
\item{txtinput}{a character vector of entities e.g. c('pubchemId1', 'pubchemId2').
The value can be neo4j ids or grinn ids, see details and see \code{\link{convertId}} for how to convert ids.
For Mesh annotation, PubChem CIDs are required.}

\item{nodetype}{a string specifying a node type. It can be one of compound (default), protein, gene, pathway, rna, dna.}

\item{annotation}{a string specifying the annotation type e.g. pathway (default) and mesh. Pathway annotation requires the database.
Mesh annotation doesn't require the database but it is available for PubChem compounds only.}

\item{internalid}{a logical value indicating whether \code{txtinput} is the neo4j id, if TRUE (default). If not, \code{txtinput} is expected to be the grinn id or PubChem CID.
See details and see \code{\link{convertId}} for how to convert ids. It has no effect on Mesh annotation.}

\item{size}{a numeric vector specifying the minimum number of members in each annotation term to be used in the analysis. Default is 3.}
}
\value{
list of data frame of nodes, edges and overrepresentation. The nodes data frame contains input attributes. The edges data frame contains annotation pairs.
The data frame of overrepresentation contains the following components:

\code{rank} = rank sort by p adj

\code{id} = annotation id or annotation neo4j id

\code{gid} = annotation id or annotation grinn id

\code{nodename} = annotation name

\code{nodelabel} = annotation type

\code{nodexref} = cross references

\code{p} = raw p-values

\code{p_adj} = adjusted p-values

\code{no_of_entities} = number of input entities in each annotation term

\code{annotation_size} = total number of entities in each annotation term from the database

\code{background_size} = total number of annotated entities in the database

\code{member} = list of entity members of the annotation term

Return list of empty data frame if error or found nothing.
}
\description{
perform overrepresentation analysis using hypergeometric tests to retrieve overrepresented annotation terms of the input entities.
}
\details{
The database uses two id systems. The neo4j id is a numeric, internal id automatically generated by the database system.
The grinn id (gid) is an id system of Grinn database that uses main ids of standard resources
i.e. ENSEMBL for genes (e.g.ENSG00000139618), UniProt for proteins (e.g.P0C9J6), PubChem CID for compounds (e.g.5793), KEGG for pathways (e.g.hsa00010).
}
\examples{
#txtinput <- c(1110,10413,196,51,311,43,764,790) #compute overrepresented terms for given pubchem compounds
#result <- computeNodeOverrep(txtinput=txtinput, nodetype="compound", annotation="mesh", internalid=FALSE)
}
\author{
Kwanjeera W \email{kwanich@ucdavis.edu}
}
\references{
Johnson NL., Kotz S., and Kemp AW. (1992) Univariate Discrete Distributions, Second Edition. New York: Wiley.
}
\seealso{
\code{\link{phyper}}, \code{\link{p.adjust}}
}

