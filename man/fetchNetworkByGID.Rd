% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchNetworkByGID.R
\name{fetchNetworkByGID}
\alias{fetchNetworkByGID}
\title{Query the networks of a specific relationship from the graph database}
\usage{
fetchNetworkByGID(from, to, fromtype, totype, reltype, returnas)
}
\arguments{
\item{from}{a character vector of source nodes used for the query e.g. from = c('id1', 'id2').
The value must be grinn ids, see \code{\link{convertId}} for how to convert to grinn ids.}

\item{to}{a character vector of target nodes used for the query e.g. to = c('id1', 'id2').
The value must be grinn ids, see \code{\link{convertId}} for how to convert to grinn ids.}

\item{fromtype}{a string specifying the type of source nodes. It can be one of compound, protein, gene, pathway, rna, dna, phenotype.}

\item{totype}{a string specifying the type of target nodes. It can be one of compound, protein, gene, pathway, rna, dna, phenotype.}

\item{reltype}{a string specifying a relationship type used for the query.
It can be one of annotation, biochemical_reaction, catalysis, control, conversion, genetic_association, molecular_binding.}

\item{returnas}{a string specifying output type. It can be one of dataframe, list, json. Default is dataframe.}
}
\value{
list of nodes with the following components:

\code{id} = node internal neo4j id

\code{gid} = node grinn id

\code{nodename} = node name

\code{nodelabel} = node type

\code{nodexref} = node cross references

list of edges with the following components:

\code{source, target} = node internal neo4j id

\code{type} = relationship type

\code{datasource} = relationship resource

\code{properties} = relationship properties

Return empty list or data frame if error or found nothing.
}
\description{
query the networks of a specific relationship type between the given source and/or target nodes.
see \url{http://grinnhomepage} for the database structure to construct the network query.
}
\details{
The function queries for the networks containing the given relationship type between the source nodes and/or target nodes based on the database structure.
This function is specifically to query for the ralationship of length = 1. Use \code{\link{fetchHetNetwork}} to query for a heterogeneous network of variable length.
}
\examples{
# Query the network of gene-CONVERSION-protein
#from = list('162608','38432','44911')
#result = fetchNetworkByGID(from=from, to=NULL, fromtype="gene", totype="protein", reltype="conversion")
#library(igraph)
#plot(graph.data.frame(result$edges[,1:2], directed=FALSE))
# Query the network of protein-CONTROL-gene
#from = list('30777','30741','28116')
#to = c("343","285","255")
#result = fetchNetworkByGID(from=from, to=to, fromtype="protein", totype="gene", reltype="control")
#from = c('2','5')
#to = '4'
#result = fetchNetworkByGID(from=from, to=to, fromtype="protein", totype="protein", reltype="molecular_binding")
}
\author{
Kwanjeera W \email{kwanich@ucdavis.edu}
}
\seealso{
\code{\link{convertId}}, \code{\link{fetchHetNetwork}}, \url{http://grinnhomepage}
}

